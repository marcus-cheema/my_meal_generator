
# Stage 1: KeyBERT dependencies
FROM python:3.12-slim AS keybert-stage

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install KeyBERT dependencies
COPY requirements-keybert.txt .
RUN pip install --no-cache-dir -r requirements-keybert.txt

# Stage 2: OpenAI dependencies
FROM python:3.12-slim AS openai-stage

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install OpenAI dependencies
COPY requirements-openai.txt .
RUN pip install --no-cache-dir -r requirements-openai.txt


# Stage 3: Final image (Combining KeyBERT and OpenAI)
FROM python:3.12-slim

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy KeyBERT and OpenAI from previous stages

COPY --from=keybert-stage /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=openai-stage /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
# COPY --from=keybert-stage /app /app/keybert
# COPY --from=openai-stage /app /app/openai

COPY . .

# Verify installations of OpenAI and KeyBERT
RUN python -c "import openai; print('OpenAI version')"
RUN python -c "from keybert import KeyBERT; print('KeyBERT version:')"

# Install application-specific dependencies
COPY requirements-app.txt .
RUN pip install --no-cache-dir -r requirements-app.txt

# Copy application code
COPY . /app

# Expose port
EXPOSE 5000

# Start the app with Gunicorn
CMD ["gunicorn", "--bind", "0.0.0.0:5000", "app:app"]